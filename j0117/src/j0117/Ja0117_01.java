package j0117;

public class Ja0117_01 {

	public static void main(String[] args) {

		Tv t1 = new Tv();
		t1.color = "red";
		t1.power = false;
		t1.channel = 7;

		t1.power();
		t1.channelUp();

		System.out.println("현재채널 : "+t1.channel);






		// 객체

		// 객체지향언어의 특징
		// 기존의 프로그래밍 언어와 크게 다르지 않다.
		// - 기존의 프로그래밍 언어에 몇가지 규칙을 추가한 것일 뿐이다.
		// 코드의 재사용성이 높다.
		// - 새로운 코드를 작성할 떄 기존의 코드를 이용해서 쉽게 작성할 수 있다.
		// 코드의 관리가 쉬워졌다
		// 코드간의 관계를 맺어줌으로써 보다 노력으로 코드변경이 가능하다.
		// 신뢰성이 높은 프로그램의 개발을 가능하게 한다.
		// 제어자와 메서드를 이용해서 데이터를 보호하고, 코드의 중복을 제거하여 코드의 불일치로 인한 오류를 방지할 수 있다.

		// 클래스와 객체의 정의와 용도
		// 클래스의 정의 - 클래스란 객체를 정의해 놓은 것이다.
		// 클래스의 용도 - 클래스는 객체를 생성하는데 사용된다.

		// 객체 = 인스턴스
		// 인스턴스 생성방법
		//


	}

}
